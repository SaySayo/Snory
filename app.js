// for non-bundled source, contact @Neilblaze <pratyaybanerjeex@gmail.com>
// Â© Neilblaze |  MIT License 2021

const app=document.querySelector("#app");const startBtn=document.querySelector("#start-button");const stopBtn=document.querySelector("#stop-button");let started=false;const width=640;const height=480;const faceMode=affdex.FaceDetectorMode.LARGE_FACES;const detector=new affdex.CameraDetector(app,width,height,faceMode);detector.detectExpressions.smile=true;detector.detectEmotions.joy=true;detector.detectAppearance.gender=true;detector.detectAllEmotions();detector.detectAllExpressions();startBtn.addEventListener("click",function(){if(!started){started=true;detector.start()}});stopBtn.addEventListener("click",function(){if(started){started=false;detector.stop();const e={time:"Time",gender:"Gender",anger:"Anger",disgust:"Disgust",fear:"Fear",joy:"Joy",sadness:"Sadness",surprise:"Surprise",attention:"Attention",eyeClosure:"EyeClosure",jawDrop:"jawDrop",mouthOpen:"MouthOpen",smile:"Smile"};exportCSVFile(e,data,"winterland")}});detector.addEventListener("onInitializeSuccess",function(){console.log("Initialized successfully")});detector.addEventListener("onInitializeFailure",function(){console.log("Initialize failed")});detector.addEventListener("onWebcamConnectSuccess",function(){console.log("I was able to connect to the camera successfully.")});detector.addEventListener("onWebcamConnectFailure",function(){console.log("I've failed to connect to the camera :(")});const data=[];detector.addEventListener("onImageResultsSuccess",function(e,t,o){if(e.length){const n=e[0];console.log(n);results.innerHTML=`
            <p>Gender : ${n.appearance.gender}</p>
            <p>Joy : ${n.emotions.joy}</p>
            <p>Smile : ${n.expressions.smile}</p>
            <p>JawDrop : ${n.expressions.jawDrop}</p>
        `;myChart.data.datasets.forEach(e=>{e.data=[n.emotions.anger,n.emotions.disgust,n.emotions.fear,n.emotions.joy,n.emotions.sadness,n.emotions.surprise]});myChart.update();const s=new Date;data.push({time:s.getTime(),gender:n.appearance.gender,anger:n.emotions.anger,disgust:n.emotions.disgust,fear:n.emotions.fear,joy:n.emotions.joy,sadness:n.emotions.sadness,surprise:n.emotions.surprise,attention:n.expressions.attention,eyeClosure:n.expressions.eyeClosure,jawDrop:n.expressions.jawDrop,mouthOpen:n.expressions.mouthOpen,smile:n.expressions.smile})}});detector.addEventListener("onImageResultsFailure",function(e,t,o){});function convertToCSV(e){var t=e;var o="";for(var n=0;n<t.length;n++){var s="";for(var r in t[n]){if(s!=""){s+=","}s+=t[n][r]}o+=s+"\r\n"}return o}function exportCSVFile(e,t,o){if(e){t.unshift(e)}var n=convertToCSV(t);var s=o+".csv"||"export.csv";var r=new Blob([n],{type:"text/csv;charset=utf-8;"});if(navigator.msSaveBlob){navigator.msSaveBlob(r,s)}else{var a=document.createElement("a");if(a.download!==undefined){var i=URL.createObjectURL(r);a.setAttribute("href",i);a.setAttribute("download",s);a.style.visibility="hidden";document.body.appendChild(a);a.click();document.body.removeChild(a)}}}var ctx=document.getElementById("myChart");var myChart=new Chart(ctx,{type:"radar",data:{labels:["Anger ðŸ˜¡","Disgust ðŸ˜’","Fear ðŸ˜±","Joy ðŸ˜‚","Sadness ðŸ˜¢","Surprise ðŸ˜²"],datasets:[{label:"Probability on the scale of 0-100",data:[0,0,0,0,0,0],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(182, 245, 66, 0.2)"],borderColor:["rgba(255, 99, 132, 1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(182, 245, 66, 1)"],borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}]}}});